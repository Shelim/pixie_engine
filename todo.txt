 - Sanitizing
	 - Add FlatBufffers dependency https://google.github.io/flatbuffers/index.html
	 - Add new DEF for Default Providers
	 - Program (!!!)
         - Finish up thread accounter
			 -> Platform dependand thread usage 
         - Make similiar accounter for apps
		 - Make apps overseer
		 - Engine startup
		 - Debug_symbol should be a global module
     - Code Coverage for tests:
             - Use CLANG: https://clang.llvm.org/docs/SourceBasedCodeCoverage.html
             - See docs in _command/windows/execute_tests.bat
             - Research ways of including that in VSCode inline notes
	 - Cleanup parser
		 - Error detection (Intellisense): https://stackoverflow.com/questions/47354226/how-to-provider-user-with-autocomplete-suggestions-for-given-boostspirit-gramm
		 - Common elements should be in common
	 - to_string formatting (second argument!)
	 
 - New dependencies:
	 - Replace libRocket with CEF3 https://bitbucket.org/chromiumembedded/cef/wiki/GeneralUsage
	 - Add remotely for profiling: https://github.com/Celtoys/Remotery
		 - Add new configurations:
			 - Debug_profilable
			 - Hybrid_profilable

 - Work on components: 
     - app_instancer
     - app_overseer
+	 - config_storage
+        - XML (?) inside game directory (for portable!)
			 - Requires: XML
     - console_output
+        - Filters
		 - Instances
		 - Formatter
	 - data_archives
	 - data_creator
	 - data_monitor
	 - data_source
	 - environment_info
	 - path_resolver
	 - renderer_status
 - Utility / XML

 - Unit Tests
	 
Docs
 - Document code
 - Add Engine Architecture page
  
Packs
 - Zip (output)
	- Save pack of items
 - Encrypted
	- Custom archive based on encryption key
	- The same rules apply
  
DataItems	
 - Basic item loading/saving (data item should only load data for parsing after that!)
 - Softlinks
 - Digital Sign-ing datafiles

Modules
 - Manifests
	- Modules
	- Submodules

Asset Manager
 - Map asset_path_t -> virtual_path_t