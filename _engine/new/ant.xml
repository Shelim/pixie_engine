<project name="new project" basedir="..">
	
	<property name="unix" value="game" />
	<property name="full" value="Sample game" />
	<property name="app_type" value="executable" />
	<property name="app_predefined" value="executable" />
	<property name="app_make_default" value="false" />
	<property name="app_src" value="empty" />
	
	<target name="replace_variables">
		<replace token="$EMPTY_UNIX_NAME$" value="${unix}"><fileset dir="${replace_variables.file}" /></replace>
		<replace token="$EMPTY_NAME$" value="${full}"><fileset dir="${replace_variables.file}" /></replace>
		<replace token="$EMPTY_TYPE$" value="${app_type}"><fileset dir="${replace_variables.file}" /></replace>
	</target>
	
	<target name="new_project">
		<copy todir="../${unix}" includeEmptyDirs="true"> 
			<fileset dir="new/project" defaultexcludes="no" /> 
			
			<mapper>
				<mapper type="regexp" from="(.*)$EMPTY_UNIX_NAME$(.*)" to="\1${unix}\2"/>
				<mapper type="regexp" from="(.*)$EMPTY_NAME$(.*)" to="\1${full}\2"/>
				<mapper type="regexp" from="(.*)$EMPTY_TYPE$(.*)" to="\1${app_type}\2"/>
				<mapper type="identity"/>
			</mapper>
		</copy>
		<copy file="new/build_gitignore" tofile="../${unix}/.gitignore" />
		
		<antcall target="replace_variables">
			<param name="replace_variables.file" value="../${unix}" />
		</antcall>
	</target>
	
<!-- Helper target for below; Make default if... well, was requested -->
	<target name="check_if_make_default">
		<condition property="can_make_default">
			<istrue value="${app_make_default}" />
		</condition>
	</target>
		
<!-- Make this app default to launch  -->
	<target name="make_default" depends="check_if_make_default" if="can_make_default">
		
		<replaceregexp file="../${app_src}/manifest/_common/windows/manifest.xml" match="&lt;install_run&gt;(.*)&lt;\/install_run&gt;" replace="&lt;install_run&gt;${full}.exe&lt;/install_run&gt;" byline="true" />
		<replaceregexp file="../${app_src}/manifest/_common/windows/manifest_debug.xml" match="&lt;install_run&gt;(.*)&lt;\/install_run&gt;" replace="&lt;install_run&gt;${full}.exe&lt;/install_run&gt;" byline="true" />
		<replaceregexp file="../${app_src}/manifest/_common/windows/manifest_release.xml" match="&lt;install_run&gt;(.*)&lt;\/install_run&gt;" replace="&lt;install_run&gt;${full}.exe&lt;/install_run&gt;" byline="true" />
		
	</target>
	
	<target name="new_application_internal">
		<mkdir dir="../${app_src}" />
		<copy todir="../${app_src}" includeEmptyDirs="true" overwrite="true"> 
			<fileset dir="new/application/common" defaultexcludes="no" /> 
			<fileset dir="new/application/${app_predefined}" defaultexcludes="no" /> 
			
			<mapper>
				<mapper type="regexp" from="(.*)\$EMPTY_UNIX_NAME\$(.*)" to="\1${unix}\2"/>
				<mapper type="regexp" from="(.*)\$EMPTY_NAME\$(.*)" to="\1${full}\2"/>
				<mapper type="regexp" from="(.*)\$EMPTY_TYPE\$(.*)" to="\1${app_type}\2"/>
				<mapper type="identity"/>
			</mapper>
			
		</copy>
		
		<antcall target="replace_variables">
			<param name="replace_variables.file" value="../${app_src}" />
		</antcall>
				
	</target>
	
	<target name="new_application" depends="new_application_internal, make_default">
				
	</target>
	
</project>